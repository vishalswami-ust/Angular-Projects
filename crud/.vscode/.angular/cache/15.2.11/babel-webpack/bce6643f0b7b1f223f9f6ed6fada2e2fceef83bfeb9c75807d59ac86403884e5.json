{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../token.service\";\nimport * as i2 from \"@angular/forms\";\nexport class TokenComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.token = {\n      username: '',\n      password: ''\n    };\n  }\n  authenticationSubmit() {\n    // Call the authentication method from the AuthService\n    this.authService.authenticate(this.token.username, this.token.password).subscribe(response => {\n      // Handle successful authentication\n      console.log('Authentication successful:', response);\n      // Optionally redirect or handle authenticated state\n    }, error => {\n      // Handle authentication errors\n      console.error('Authentication failed:', error);\n    });\n  }\n  greet() {\n    alert('Hello, ' + this.token.username + '!');\n  }\n  admin() {\n    alert('Admin functionality is not yet implemented.');\n  }\n  static #_ = this.ɵfac = function TokenComponent_Factory(t) {\n    return new (t || TokenComponent)(i0.ɵɵdirectiveInject(i1.TokenService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TokenComponent,\n    selectors: [[\"app-token\"]],\n    decls: 18,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"id\", \"authenticationUsername\", \"name\", \"username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"authenticationPwd\", \"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\"]],\n    template: function TokenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"Token works!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"h1\");\n        i0.ɵɵtext(3, \"Creating login page for authentication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function TokenComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.authenticationSubmit();\n        });\n        i0.ɵɵelementStart(5, \"label\");\n        i0.ɵɵtext(6, \" Username: \");\n        i0.ɵɵelementStart(7, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function TokenComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.token.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9, \" Password: \");\n        i0.ɵɵelementStart(10, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function TokenComponent_Template_input_ngModelChange_10_listener($event) {\n          return ctx.token.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"button\", 3);\n        i0.ɵɵtext(13, \"Authenticate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TokenComponent_Template_button_click_14_listener() {\n          return ctx.greet();\n        });\n        i0.ɵɵtext(15, \"Greet\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function TokenComponent_Template_button_click_16_listener() {\n          return ctx.admin();\n        });\n        i0.ɵɵtext(17, \"Admin\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.token.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.token.password);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,cAAc;EAMzBC,YAAoBC,WAAyB;IAAzB,gBAAW,GAAXA,WAAW;IAL/B,UAAK,GAAG;MACNC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX;EAE+C;EAEhDC,oBAAoB;IAClB;IACA,IAAI,CAACH,WAAW,CAACI,YAAY,CAAC,IAAI,CAACC,KAAK,CAACJ,QAAQ,EAAE,IAAI,CAACI,KAAK,CAACH,QAAQ,CAAC,CACpEI,SAAS,CACRC,QAAQ,IAAG;MACT;MACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEF,QAAQ,CAAC;MACnD;IACF,CAAC,EACDG,KAAK,IAAG;MACN;MACAF,OAAO,CAACE,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACL;EAEAC,KAAK;IACHC,KAAK,CAAC,SAAS,GAAG,IAAI,CAACP,KAAK,CAACJ,QAAQ,GAAG,GAAG,CAAC;EAC9C;EAEAY,KAAK;IACHD,KAAK,CAAC,6CAA6C,CAAC;EACtD;EAAC;qBA9BUd,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT3BC,yBAAG;QAAAA,4BAAY;QAAAA,iBAAI;QAEnBA,0BAAI;QAAAA,sDAAsC;QAAAA,iBAAK;QAC/CA,+BAA0C;QAApCA;UAAA,OAAYC,0BAAsB;QAAA,EAAC;QACrCD,6BAAO;QACHA,2BACA;QAAAA,gCAAyF;QAAtDA;UAAA;QAAA,EAA4B;QAA/DA,iBAAyF;QACzFA,qBAAI;QACJA,2BACA;QAAAA,iCAAoG;QAAtEA;UAAA;QAAA,EAA4B;QAA1DA,iBAAoG;QAExGA,sBAAI;QACJA,kCAAsB;QAAAA,6BAAY;QAAAA,iBAAS;QAC3CA,kCAAwC;QAAlBA;UAAA,OAASC,WAAO;QAAA,EAAC;QAACD,sBAAK;QAAAA,iBAAS;QACtDA,kCAAwC;QAAlBA;UAAA,OAASC,WAAO;QAAA,EAAC;QAACD,sBAAK;QAAAA,iBAAS;;;QARfA,eAA4B;QAA5BA,4CAA4B;QAGjCA,eAA4B;QAA5BA,4CAA4B","names":["TokenComponent","constructor","authService","username","password","authenticationSubmit","authenticate","token","subscribe","response","console","log","error","greet","alert","admin","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\284724\\Documents\\Angular\\crud\\src\\app\\token\\token.component.ts","C:\\Users\\284724\\Documents\\Angular\\crud\\src\\app\\token\\token.component.html"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { TokenService } from '../token.service';\n\n@Component({\n  selector: 'app-token',\n  templateUrl: './token.component.html',\n  styleUrls: ['./token.component.css']\n})\nexport class TokenComponent {\n  token = {\n    username: '',\n    password: ''\n  };\n\n  constructor(private authService: TokenService) {}\n\n  authenticationSubmit() {\n    // Call the authentication method from the AuthService\n    this.authService.authenticate(this.token.username, this.token.password)\n      .subscribe(\n        response => {\n          // Handle successful authentication\n          console.log('Authentication successful:', response);\n          // Optionally redirect or handle authenticated state\n        },\n        error => {\n          // Handle authentication errors\n          console.error('Authentication failed:', error);\n        }\n      );\n  }\n\n  greet() {\n    alert('Hello, ' + this.token.username + '!');\n  }\n\n  admin() {\n    alert('Admin functionality is not yet implemented.');\n  }\n}\n","<p>Token works!</p>\n\n<h1>Creating login page for authentication</h1>\n<form (ngSubmit)=\"authenticationSubmit()\">\n    <label>\n        Username: \n        <input id=\"authenticationUsername\" [(ngModel)]=\"token.username\" name=\"username\" required>\n        <br>\n        Password: \n        <input id=\"authenticationPwd\" [(ngModel)]=\"token.password\" name=\"password\" type=\"password\" required>\n    </label>\n    <br>\n    <button type=\"submit\">Authenticate</button>\n    <button type=\"button\" (click)=\"greet()\">Greet</button>\n    <button type=\"button\" (click)=\"admin()\">Admin</button>\n</form>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}