{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TestObservableComponent {\n  invoke() {\n    let observable = this.createObservable();\n    //this.subscribeToObservable(observable);\n  }\n\n  createObservable() {\n    return new Observable(obs => {\n      setTimeout(() => {\n        obs.next('Hello');\n      }, 1000);\n      setTimeout(() => {\n        obs.next('welcome');\n      }, 2000);\n      setTimeout(() => {\n        obs.next('Asynchronous');\n      }, 3000);\n      setTimeout(() => {\n        obs.next('Communication');\n      }, 4000);\n      // setTimeout(() => {\n      //   console.log(obs.next('Hello'));\n      // }, 1000);\n      // setTimeout(() => {\n      //   console.log(obs.next('welcome'));\n      // }, 2000);\n      // setTimeout(() => {\n      //   console.log(obs.next('Asynchronous'));\n      // }, 3000);\n      // setTimeout(() => {\n      //   console.log(obs.next('Communication'));\n      // }, 4000);\n      //  obs.next(\"123...\");\n      //  obs.next(\"456\");\n      //  obs.next(\"Hello\");\n    });\n  }\n\n  subscribeToObservable(observable) {\n    observable.subscribe(data => {\n      console.log('from subscriber', data);\n    });\n  }\n  static #_ = this.ɵfac = function TestObservableComponent_Factory(t) {\n    return new (t || TestObservableComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TestObservableComponent,\n    selectors: [[\"app-test-observable\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"type\", \"button\", 3, \"click\"]],\n    template: function TestObservableComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function TestObservableComponent_Template_button_click_0_listener() {\n          return ctx.invoke();\n        });\n        i0.ɵɵtext(1, \"Invoke\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,UAAU,QAAsB,MAAM;;AAO/C,OAAM,MAAOC,uBAAuB;EAClCC,MAAM;IACJ,IAAIC,UAAU,GAAuB,IAAI,CAACC,gBAAgB,EAAE;IAC5D;EACF;;EAEAA,gBAAgB;IACd,OAAO,IAAIJ,UAAU,CAAEK,GAAG,IAAI;MAE5BC,UAAU,CAAC,MAAK;QACdD,GAAG,CAACE,IAAI,CAAC,OAAO,CAAC;MACnB,CAAC,EAAE,IAAI,CAAC;MACRD,UAAU,CAAC,MAAK;QACdD,GAAG,CAACE,IAAI,CAAC,SAAS,CAAC;MACrB,CAAC,EAAE,IAAI,CAAC;MACRD,UAAU,CAAC,MAAK;QACbD,GAAG,CAACE,IAAI,CAAC,cAAc,CAAC;MAC3B,CAAC,EAAE,IAAI,CAAC;MACRD,UAAU,CAAC,MAAK;QACbD,GAAG,CAACE,IAAI,CAAC,eAAe,CAAC;MAC5B,CAAC,EAAE,IAAI,CAAC;MAKR;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MAEA;MACA;MACA;IACF,CAAC,CAAC;EACJ;;EAEAC,qBAAqB,CAACL,UAA8B;IAClDA,UAAU,CAACM,SAAS,CAAEC,IAAI,IAAI;MAC5BC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAACF,IAAI,CAAC;IACrC,CAAC,CAAC;EACJ;EAAC;qBAhDUT,uBAAuB;EAAA;EAAA;UAAvBA,uBAAuB;IAAAY;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCRpCC,iCAAyC;QAAnBA;UAAA,OAASC,YAAQ;QAAA,EAAC;QAACD,sBAAM;QAAAA,iBAAS","names":["Observable","TestObservableComponent","invoke","observable","createObservable","obs","setTimeout","next","subscribeToObservable","subscribe","data","console","log","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\284724\\Documents\\Angular\\crud\\src\\app\\test-observable\\test-observable.component.ts","C:\\Users\\284724\\Documents\\Angular\\crud\\src\\app\\test-observable\\test-observable.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Observable, timeInterval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-test-observable',\r\n  templateUrl: './test-observable.component.html',\r\n  styleUrls: ['./test-observable.component.css'],\r\n})\r\nexport class TestObservableComponent {\r\n  invoke() {\r\n    let observable: Observable<Object> = this.createObservable();\r\n    //this.subscribeToObservable(observable);\r\n  }\r\n\r\n  createObservable(): Observable<Object> {\r\n    return new Observable((obs) => {\r\n\r\n      setTimeout(() => {\r\n       (obs.next('Hello'));\r\n      }, 1000);\r\n      setTimeout(() => {\r\n       (obs.next('welcome'));\r\n      }, 2000);\r\n      setTimeout(() => {\r\n        (obs.next('Asynchronous'));\r\n      }, 3000);\r\n      setTimeout(() => {\r\n        (obs.next('Communication'));\r\n      }, 4000);\r\n\r\n\r\n\r\n      \r\n      // setTimeout(() => {\r\n      //   console.log(obs.next('Hello'));\r\n      // }, 1000);\r\n      // setTimeout(() => {\r\n      //   console.log(obs.next('welcome'));\r\n      // }, 2000);\r\n      // setTimeout(() => {\r\n      //   console.log(obs.next('Asynchronous'));\r\n      // }, 3000);\r\n      // setTimeout(() => {\r\n      //   console.log(obs.next('Communication'));\r\n      // }, 4000);\r\n\r\n      //  obs.next(\"123...\");\r\n      //  obs.next(\"456\");\r\n      //  obs.next(\"Hello\");\r\n    });\r\n  }\r\n\r\n  subscribeToObservable(observable: Observable<Object>) {\r\n    observable.subscribe((data) => {\r\n      console.log('from subscriber',data);\r\n    });\r\n  }\r\n}\r\n","<button type=\"button\" (click)=\"invoke()\">Invoke</button>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}