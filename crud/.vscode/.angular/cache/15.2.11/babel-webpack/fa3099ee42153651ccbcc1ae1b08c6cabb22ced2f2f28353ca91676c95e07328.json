{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TokenService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:9999/authenticate';\n    this.greetUrl = 'http://localhost:9999/greet';\n    this.token = null;\n  }\n  // Method to authenticate user\n  authenticate(username, password) {\n    return this.http.post(this.apiUrl, {\n      username,\n      password\n    });\n  }\n  setToken(token) {\n    this.token = token;\n  }\n  // Get token\n  getToken() {\n    return this.token;\n  }\n  // Method to call the greet API with the JWT token\n  greet() {\n    if (!this.token) {\n      throw new Error('No token found');\n    }\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n    return this.http.get(this.greetUrl, {\n      headers\n    }, {});\n  }\n  static #_ = this.ɵfac = function TokenService_Factory(t) {\n    return new (t || TokenService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TokenService,\n    factory: TokenService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAO9D,OAAM,MAAOC,YAAY;EAOvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IALhB,WAAM,GAAG,oCAAoC;IAC7C,aAAQ,GAAG,6BAA6B;IAExC,UAAK,GAAkB,IAAI;EAEI;EAEvC;EACAC,YAAY,CAACC,QAAgB,EAAEC,QAAgB;IAC7C,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAM,IAAI,CAACC,MAAM,EAAE;MAAEH,QAAQ;MAAEC;IAAQ,CAAE,CAAC;EACjE;EAEAG,QAAQ,CAACC,KAAa;IACpB,IAAI,CAACA,KAAK,GAAGA,KAAK;EACpB;EAEA;EACAC,QAAQ;IACN,OAAO,IAAI,CAACD,KAAK;EACnB;EAEA;EACAE,KAAK;IACH,IAAI,CAAC,IAAI,CAACF,KAAK,EAAE;MACf,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;;IAGnC,MAAMC,OAAO,GAAG,IAAId,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAU,IAAI,CAACU,KAAK;KACtC,CAAC;IAEF,OAAO,IAAI,CAACP,IAAI,CAACY,GAAG,CAAS,IAAI,CAACC,QAAQ,EAAE;MAAEF;IAAO,CAAE,EAAE,EAAE,CAAC;EAC9D;EAAC;qBAlCUb,YAAY;EAAA;EAAA;WAAZA,YAAY;IAAAgB,SAAZhB,YAAY;IAAAiB,YAFX;EAAM","names":["HttpHeaders","TokenService","constructor","http","authenticate","username","password","post","apiUrl","setToken","token","getToken","greet","Error","headers","get","greetUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\284724\\Documents\\Angular\\crud\\src\\app\\token.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private apiUrl = 'http://localhost:9999/authenticate'; \n  private greetUrl = 'http://localhost:9999/greet';\n\n  private token: string | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  // Method to authenticate user\n  authenticate(username: string, password: string): Observable<any> {\n    return this.http.post<any>(this.apiUrl, { username, password });\n  }\n\n  setToken(token: string) {\n    this.token = token;\n  }\n\n  // Get token\n  getToken(): string | null {\n    return this.token;\n  }\n\n  // Method to call the greet API with the JWT token\n  greet(): Observable<string> {\n    if (!this.token) {\n      throw new Error('No token found');\n    }\n\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n\n    return this.http.get<string>(this.greetUrl, { headers }, {});\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}